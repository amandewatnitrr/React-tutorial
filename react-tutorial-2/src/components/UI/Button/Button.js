import styled from "styled-components";
import React from "react";
import styles from './Button.module.css'
/* 
 * Using styled-components library to replace styling.
 * Use -> import styled from "styled-components"
 * And, now when we use it, and inspect the element we sued it for, we will see
   a strange classes, and these classes are not we added, these class name are 
   dynamically generated by the styled-components package. 

 * Also, the components which are returned also by default applies all the props we might be pssing to the component,
   which we are exporting at the end.

 * Because what this package does in the end is, it looks at the styles and than wraps it into generated class
   names where it guaranteees that every class name is unique, so it can't spill
   over to the other components of the app. And, than it will add these classes as globad css. 
   
 * But now since we had unique class names for every styled component. the style setup here will never be able
   to affect any other component in the app.
*/

/*const Button = styled.button.attrs({className: "add-goal"})`
    font: inherit;
    padding: 0.5rem 1.5rem;
    border: 1px solid #8b005d;
    color: white;
    background: #8b005d;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);
    cursor: pointer;

  @media (min-width: 768px){
    width: auto;
  }

  &:focus {
    outline: none;
  }

  &:hover,&:active {
    background: #ac0e77;
    border-color: #ac0e77;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);
  }
`;
*/

const Button = props => {

  // In this method below we use the css modules to implement styles to various components on our webpage.
  // But, now when we would inspect this element on the the browser, just like in case of styled components
  // It will assign a strange classname to the component that we never assigned.

  /**
   * So what's happening here right under the hood is it takes those css classes in the css files, 
   * and basically changes those class names to be unique, that's the core thing it does. For, every component
   * it changes the classname of the classes we are importing.
   */

  return (
    <button type={props.type} className={styles.button} onClick={props.onClick}>
      {props.children}
    </button>
  );

  /*

  The normal way of creating a component where we actually just import the css file.

  return (
    <button type={props.type} className="button" onClick={props.onClick}>
      {props.children}
    </button>
  );
  */
};

export default Button;
