import styled from "styled-components";

/* 
 * Using styled-components library to replace styling.
 * Use -> import styled from "styled-components"
 * And, now when we use it, and inspect the element we sued it for, we will see
   a strange classes, and these classes are not we added, these class name are 
   dynamically generated by the styled-components package. 

 * Also, the components which are returned also by default applies all the props we might be pssing to the component,
   which we are exporting at the end.

 * Because what this package does in the end is, it looks at the styles and than wraps it into generated class
   names where it guaranteees that every class name is unique, so it can't spill
   over to the other components of the app. And, than it will add these classes as globad css. 
   
 * But now since we had unique class names for every styled component. the style setup here will never be able
   to affect any other component in the app.
*/

const Button = styled.button.attrs({className: "add-goal"})`
    font: inherit;
    padding: 0.5rem 1.5rem;
    border: 1px solid #8b005d;
    color: white;
    background: #8b005d;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);
    cursor: pointer;

  &:focus {
    outline: none;
  }

  &:hover,&:active {
    background: #ac0e77;
    border-color: #ac0e77;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);
  }
`;

// const Button = props => {
//   return (
//     <button type={props.type} className="button" onClick={props.onClick}>
//       {props.children}
//     </button>
//   );
// };

export default Button;
